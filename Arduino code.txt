/////////////////////////////////////////////////////////BLYNK
#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#define BLYNK_AUTH_TOKEN "Tb0VlbiG6CUxix94Fcn39g2GF-3R_vao"


char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "SUNDAY";  // WIFI Name
char pass[] = "23456789";  // WIFI Password

/////////////////////////////////////////////////SERVER
//#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClient.h>
String apiKeyValue = "tPmAT5Ab3j7F9";
String sensorName = " ";
String sensorLocation = "EKM";
#define ON_Board_LED 2 //Blue LED

//////////////////////////////////////////////////DHT11 Sensor
#include <DHT.h>
#define DHTPIN 12          // D3Pin
#define DHTTYPE DHT11     // DHT 11
DHT dht(DHTPIN, DHTTYPE);
float Air_Temp;
float Air_Humidity;

#include <OneWire.h>
#include <DallasTemperature.h>
const int oneWireBus = 13;     
OneWire oneWire(oneWireBus);
DallasTemperature sensors(&oneWire);
float Body_Temp ;


int Relay=14;
float Temp_Limit;

//////////////////////////////////////////////////
int Fan_Data;
int Data;
int Mode_data;

/////////////////////////////////////////////////
#include <NTPClient.h>
#include <WiFiUdp.h>
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "in.pool.ntp.org", 19800, 60000);
int time_blynk;
int HH, MM,final_time;
int Timer_Data=1;

void setup() {

Serial.begin(115200);
delay(100); 
Blynk.begin(auth, ssid, pass,"blynk.cloud",80);
dht.begin();
delay(100);
sensors.begin();

  WiFi.begin(ssid, pass);
  Serial.println("Connecting");
  
    while(WiFi.status() != WL_CONNECTED)
   { 
    delay(500);
    Serial.print(".");
    digitalWrite(ON_Board_LED, LOW);
    delay(250);
    digitalWrite(ON_Board_LED, HIGH);
    delay(250);
    }

  Serial.println("");
  Serial.print("Connected to WiFi network with IP Address: ");
  Serial.println(WiFi.localIP());
  
  digitalWrite(ON_Board_LED, LOW);//wifi connected LED on
  delay(100);

pinMode(Relay,OUTPUT);
digitalWrite(Relay, LOW);
Temp_limit();

timeClient.begin();

}

void Temp_limit(){
  Serial.println("Setting Temperature Limit");
  delay(1000);
  Air_Temp = dht.readTemperature(); 
  sensors.requestTemperatures(); 
  Temp_Limit = Air_Temp+1;
  Blynk.virtualWrite(V5,Temp_Limit);  
}


BLYNK_WRITE(V6)
{
time_blynk = param.asInt();
Serial.print(time_blynk);
Serial.println(" Got The Time");
}

void loop() {
Blynk.run();

////////////////////////////////////////////////////TIMER
 timeClient.update();
  HH = timeClient.getHours();
                  //Serial.print(timeClient.getHours());
  int hours = HH;    
    if (hours == 0) hours = 12;  // Midnight
    if (hours > 12) hours = hours - 12;
                  //Serial.print(hours);
                  //Serial.print(":");
 MM = timeClient.getMinutes();
                  // Serial.println(timeClient.getMinutes()); 
 final_time = 3600*hours + 60*MM;
                  // Serial.println(final_time);
 
  if (time_blynk == final_time){
     Serial.println("............................TIMER ACTIVE............................");
     Timer_Data=1;
     Blynk.virtualWrite(V7,1);
  }
  if(time_blynk != final_time){
     Timer_Data=0;
     Blynk.virtualWrite(V7,0);
  }


////////////////////////////////////////////////////////////
       Air_Temp = dht.readTemperature(); 
       Air_Humidity = dht.readHumidity(); 
       sensors.requestTemperatures(); 
       Body_Temp = sensors.getTempCByIndex(0);
 
  Print_Data();

/////////////////////////////////////////////Remote Control
if(Mode_data==0)
{
       if(Fan_Data==1)
       {
       digitalWrite(Relay,HIGH);
       Blynk.virtualWrite(V0,1); 
       }
       else if(Fan_Data==0)
       {
       digitalWrite(Relay,LOW);
       Blynk.virtualWrite(V0,0); 
       }

}




////////////////////////////////////////////Automatic Mode
if(Mode_data==1){
Serial.println("Auto mode");
  if(Timer_Data==1)

  {
  if(Body_Temp>Temp_Limit )
  {
  digitalWrite(Relay,HIGH);
  Blynk.virtualWrite(V0,1); 
  }
  if(Body_Temp<=Temp_Limit)
  {
  digitalWrite(Relay,LOW);
  Blynk.virtualWrite(V0,0); 
  }
Fan_Data=0;

}

}

delay(1000);

Blynk.virtualWrite(V2,Body_Temp);
Blynk.virtualWrite(V3,Air_Temp);  
Blynk.virtualWrite(V4,Air_Humidity);  

Upload_data();

}




void Print_Data(){
  Serial.print("Air_Temp: ");
{
  Serial.print(Air_Temp);
}
  Serial.print("   Air_Humidity: ");
  Serial.print(Air_Humidity);
  Serial.print("   Temp_Limit: ");
  Serial.print(Temp_Limit);
  Serial.print("   DS18B20_Temp : ");
  Serial.println(Body_Temp );
}


///////////////////////////Fan
  BLYNK_WRITE(V0)
{
Data = param.asInt();
  if(Data == 1)
  {
   Fan_Data=1;

  }
  if(Data == 0){
    Fan_Data=0;
  }
}
///////////////////////////Mode Selection
  BLYNK_WRITE(V1)
{
Data = param.asInt();
  if(Data == 0)
  {
   Mode_data=1; //Remote control

  }
  if(Data == 1){
    Mode_data=0;  //Automatic mode
  }
}
///////////////////////////TEMPERATURE LIMIT setting
  BLYNK_WRITE(V5)
  {
   Temp_Limit = param.asInt();
  }





void Upload_data(){

  if(WiFi.status()== WL_CONNECTED )
  {
  digitalWrite(ON_Board_LED, LOW);//wifi connected LED on

      HTTPClient http; 
      http.begin("http://192.168.36.125/sensordata/post-esp-data.php");
      http.addHeader("Content-Type", "application/x-www-form-urlencoded");  
      String httpRequestData = "api_key=" + apiKeyValue + "&sensor=" + sensorName+ "&location=" + sensorLocation + "&value1=" + Air_Temp + "&value2=" + Air_Humidity + 
      "&value3=" + Body_Temp + "";  
      
      Serial.print("Upload_Data: ");
      Serial.println(httpRequestData); 

      int httpResponseCode = http.POST(httpRequestData);
      Serial.print("Upload_ResponseCode: ");
      Serial.println(httpResponseCode); 
      delay(1000);
  
  
  
  }
  
  else {
        Serial.println("WiFi Disconnected");
        digitalWrite(ON_Board_LED, HIGH);
         }
  
}